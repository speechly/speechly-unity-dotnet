### YamlMime:ManagedReference
items:
- uid: Speechly.SLUClient.Platform
  commentId: T:Speechly.SLUClient.Platform
  id: Platform
  parent: Speechly.SLUClient
  children:
  - Speechly.SLUClient.Platform.Fetch(System.String)
  - Speechly.SLUClient.Platform.GetDeviceId(System.String)
  - Speechly.SLUClient.Platform.GetPersistentStoragePath
  - Speechly.SLUClient.Platform.GuidFromString(System.String)
  langs:
  - csharp
  - vb
  name: Platform
  nameWithType: Platform
  fullName: Speechly.SLUClient.Platform
  type: Class
  source:
    remote:
      path: speechly-client-net-standard-2.0/Speechly/SLUClient/Platform.cs
      branch: feature/dotnet-vad
      repo: git@github.com:speechly/speechly-unity-dotnet.git
    id: Platform
    path: speechly-client-net-standard-2.0/Speechly/SLUClient/Platform.cs
    startLine: 6
  assemblies:
  - speechly-unity-net-standard-2.0
  namespace: Speechly.SLUClient
  syntax:
    content: 'public class Platform : object'
    content.vb: >-
      Public Class Platform
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Speechly.SLUClient.Platform.GetDeviceId(System.String)
  commentId: M:Speechly.SLUClient.Platform.GetDeviceId(System.String)
  id: GetDeviceId(System.String)
  parent: Speechly.SLUClient.Platform
  langs:
  - csharp
  - vb
  name: GetDeviceId(String)
  nameWithType: Platform.GetDeviceId(String)
  fullName: Speechly.SLUClient.Platform.GetDeviceId(System.String)
  type: Method
  source:
    remote:
      path: speechly-client-net-standard-2.0/Speechly/SLUClient/Platform.cs
      branch: feature/dotnet-vad
      repo: git@github.com:speechly/speechly-unity-dotnet.git
    id: GetDeviceId
    path: speechly-client-net-standard-2.0/Speechly/SLUClient/Platform.cs
    startLine: 9
  assemblies:
  - speechly-unity-net-standard-2.0
  namespace: Speechly.SLUClient
  syntax:
    content: public static string GetDeviceId(string seed = null)
    parameters:
    - id: seed
      type: System.String
    return:
      type: System.String
    content.vb: Public Shared Function GetDeviceId(seed As String = Nothing) As String
  overload: Speechly.SLUClient.Platform.GetDeviceId*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Speechly.SLUClient.Platform.Fetch(System.String)
  commentId: M:Speechly.SLUClient.Platform.Fetch(System.String)
  id: Fetch(System.String)
  parent: Speechly.SLUClient.Platform
  langs:
  - csharp
  - vb
  name: Fetch(String)
  nameWithType: Platform.Fetch(String)
  fullName: Speechly.SLUClient.Platform.Fetch(System.String)
  type: Method
  source:
    remote:
      path: speechly-client-net-standard-2.0/Speechly/SLUClient/Platform.cs
      branch: feature/dotnet-vad
      repo: git@github.com:speechly/speechly-unity-dotnet.git
    id: Fetch
    path: speechly-client-net-standard-2.0/Speechly/SLUClient/Platform.cs
    startLine: 31
  assemblies:
  - speechly-unity-net-standard-2.0
  namespace: Speechly.SLUClient
  syntax:
    content: public static Task<byte[]> Fetch(string url)
    parameters:
    - id: url
      type: System.String
    return:
      type: Task{System.Byte[]}
    content.vb: Public Shared Function Fetch(url As String) As Task(Of Byte())
  overload: Speechly.SLUClient.Platform.Fetch*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Speechly.SLUClient.Platform.GetPersistentStoragePath
  commentId: M:Speechly.SLUClient.Platform.GetPersistentStoragePath
  id: GetPersistentStoragePath
  parent: Speechly.SLUClient.Platform
  langs:
  - csharp
  - vb
  name: GetPersistentStoragePath()
  nameWithType: Platform.GetPersistentStoragePath()
  fullName: Speechly.SLUClient.Platform.GetPersistentStoragePath()
  type: Method
  source:
    remote:
      path: speechly-client-net-standard-2.0/Speechly/SLUClient/Platform.cs
      branch: feature/dotnet-vad
      repo: git@github.com:speechly/speechly-unity-dotnet.git
    id: GetPersistentStoragePath
    path: speechly-client-net-standard-2.0/Speechly/SLUClient/Platform.cs
    startLine: 51
  assemblies:
  - speechly-unity-net-standard-2.0
  namespace: Speechly.SLUClient
  syntax:
    content: public static string GetPersistentStoragePath()
    return:
      type: System.String
    content.vb: Public Shared Function GetPersistentStoragePath As String
  overload: Speechly.SLUClient.Platform.GetPersistentStoragePath*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Speechly.SLUClient.Platform.GuidFromString(System.String)
  commentId: M:Speechly.SLUClient.Platform.GuidFromString(System.String)
  id: GuidFromString(System.String)
  parent: Speechly.SLUClient.Platform
  langs:
  - csharp
  - vb
  name: GuidFromString(String)
  nameWithType: Platform.GuidFromString(String)
  fullName: Speechly.SLUClient.Platform.GuidFromString(System.String)
  type: Method
  source:
    remote:
      path: speechly-client-net-standard-2.0/Speechly/SLUClient/Platform.cs
      branch: feature/dotnet-vad
      repo: git@github.com:speechly/speechly-unity-dotnet.git
    id: GuidFromString
    path: speechly-client-net-standard-2.0/Speechly/SLUClient/Platform.cs
    startLine: 62
  assemblies:
  - speechly-unity-net-standard-2.0
  namespace: Speechly.SLUClient
  syntax:
    content: public static string GuidFromString(string s)
    parameters:
    - id: s
      type: System.String
    return:
      type: System.String
    content.vb: Public Shared Function GuidFromString(s As String) As String
  overload: Speechly.SLUClient.Platform.GuidFromString*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Speechly.SLUClient
  commentId: N:Speechly.SLUClient
  name: Speechly.SLUClient
  nameWithType: Speechly.SLUClient
  fullName: Speechly.SLUClient
- uid: Speechly.SLUClient.Platform.GetDeviceId*
  commentId: Overload:Speechly.SLUClient.Platform.GetDeviceId
  name: GetDeviceId
  nameWithType: Platform.GetDeviceId
  fullName: Speechly.SLUClient.Platform.GetDeviceId
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Speechly.SLUClient.Platform.Fetch*
  commentId: Overload:Speechly.SLUClient.Platform.Fetch
  name: Fetch
  nameWithType: Platform.Fetch
  fullName: Speechly.SLUClient.Platform.Fetch
- uid: Task{System.Byte[]}
  commentId: '!:Task{System.Byte[]}'
  definition: Task`1
  name: Task<Byte[]>
  nameWithType: Task<Byte[]>
  fullName: Task<System.Byte[]>
  nameWithType.vb: Task(Of Byte())
  fullName.vb: Task(Of System.Byte())
  name.vb: Task(Of Byte())
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Task`1
  isExternal: true
  name: Task<>
  nameWithType: Task<>
  fullName: Task<>
  nameWithType.vb: Task(Of )
  fullName.vb: Task(Of )
  name.vb: Task(Of )
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Speechly.SLUClient.Platform.GetPersistentStoragePath*
  commentId: Overload:Speechly.SLUClient.Platform.GetPersistentStoragePath
  name: GetPersistentStoragePath
  nameWithType: Platform.GetPersistentStoragePath
  fullName: Speechly.SLUClient.Platform.GetPersistentStoragePath
- uid: Speechly.SLUClient.Platform.GuidFromString*
  commentId: Overload:Speechly.SLUClient.Platform.GuidFromString
  name: GuidFromString
  nameWithType: Platform.GuidFromString
  fullName: Speechly.SLUClient.Platform.GuidFromString
